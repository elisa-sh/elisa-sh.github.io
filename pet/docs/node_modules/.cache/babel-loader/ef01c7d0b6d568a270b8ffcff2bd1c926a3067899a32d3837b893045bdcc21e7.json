{"ast":null,"code":"var _jsxFileName = \"/Users/elisasituhuang/Desktop/Pets/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Card from \"./Card\";\nimport HomePage from \"./HomePage\";\nimport NavBar from \"./NavBar\";\nimport Header from \"./Header\";\nimport MeetPet from \"./MeetPet\";\nimport ShopContainer from \"./ShopContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pets, setPets] = useState([]);\n  const arr = [];\n  const priceArr = [];\n  //form states\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [types, setTypes] = useState(\"\");\n  //form states\n\n  //filter state\n  const [filterValue, setFilterValue] = useState('all');\n  //filter state\n  const url = 'http://localhost:3001/pets';\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => setPets(data));\n  }, []);\n  function addLike(id, newData, currentLike) {\n    console.log(newData);\n    fetch(`${url}/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    });\n    const updatedArray = pets.map(pet => {\n      if (pet.id === id) return {\n        ...pet,\n        likes: currentLike\n      };else return pet;\n    });\n    setPets(updatedArray);\n  }\n  function addComment(id, newData, comment) {\n    fetch(`${url}/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    });\n    const updatedArray = pets.map(pet => {\n      if (pet.id === id) {\n        return {\n          ...pet,\n          comments: [...pet.comments, comment]\n        };\n      } else return pet;\n    });\n    setPets(updatedArray);\n  }\n  const newArray = pets.filter(pet => {\n    if (filterValue === 'all') return pet;else return pet.type === filterValue;\n  });\n  const cardList = newArray.map(pet => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      pet: pet,\n      addLike: addLike,\n      addComment: addComment\n    }, pet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  });\n  function addPet() {\n    const newData = {\n      name: name,\n      age: age,\n      type: types,\n      image: image,\n      likes: 0,\n      description: description\n    };\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    }).then(r => r.json()).then(() => setPets([...pets, newData]));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(HomePage, {\n          setName: setName,\n          setImage: setImage,\n          setAge: setAge,\n          setDescription: setDescription,\n          setTypes: setTypes,\n          addPet: addPet,\n          cardList: cardList,\n          setFilterValue: setFilterValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/meet pet\",\n        children: /*#__PURE__*/_jsxDEV(MeetPet, {\n          pets: pets\n        }, pets.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        children: /*#__PURE__*/_jsxDEV(ShopContainer, {\n          arr: arr,\n          priceArr: priceArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3dbG193zeAG2TV5IUR4w7i4sf+8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","Card","HomePage","NavBar","Header","MeetPet","ShopContainer","App","pets","setPets","arr","priceArr","name","setName","image","setImage","age","setAge","description","setDescription","types","setTypes","filterValue","setFilterValue","url","fetch","then","res","json","data","addLike","id","newData","currentLike","console","log","method","headers","body","JSON","stringify","updatedArray","map","pet","likes","addComment","comment","comments","newArray","filter","type","cardList","addPet","r"],"sources":["/Users/elisasituhuang/Desktop/Pets/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Card from \"./Card\";\nimport HomePage from \"./HomePage\";\nimport NavBar from \"./NavBar\";\nimport Header from \"./Header\";\nimport MeetPet from \"./MeetPet\";\nimport ShopContainer from \"./ShopContainer\";\n\nfunction App() {\n  const [pets, setPets] = useState([])\n  const arr = [];\n  const priceArr = [];\n  //form states\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [types, setTypes] = useState(\"\");\n  //form states\n\n  //filter state\n  const [filterValue, setFilterValue] = useState('all')\n  //filter state\n  const url = 'http://localhost:3001/pets'\n  useEffect(()=>{\n    fetch(url)\n    .then(res => res.json())\n    .then(data => setPets(data))\n  }, [])\n\n  function addLike(id, newData, currentLike){\n    console.log(newData)\n    fetch(`${url}/${id}`, {\n      method:\"PATCH\",\n      headers:{\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify(newData)\n    })\n    const updatedArray = pets.map(pet => {\n      if(pet.id === id) return {...pet, likes:currentLike}\n      else return pet;\n    }) \n    setPets(updatedArray)\n  }\n\n  function addComment(id, newData, comment){\n    fetch(`${url}/${id}`, {\n      method: \"PATCH\",\n      headers:{\n        \"Content-Type\": \"application/json\"\n      }, \n      body: JSON.stringify(newData)\n    })\n    const updatedArray = pets.map(pet => {\n      if(pet.id === id) {\n        return {...pet, comments: [...pet.comments, comment]}\n      }\n      else return pet;\n    })\n    setPets(updatedArray)\n  }\n\n  const newArray = pets.filter(pet => {\n    if(filterValue === 'all') return pet\n    else return pet.type === filterValue\n  })\n\n  const cardList = newArray.map(pet => {\n    return <Card \n    key={pet.id} \n    pet={pet}\n    addLike={addLike}\n    addComment={addComment}\n    />\n  })\n\n  function addPet(){\n    const newData = {\n      name: name,\n      age: age,\n      type: types,\n      image: image,\n      likes: 0,\n      description: description,\n      \n    }\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n         \"Content-Type\" : \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    })\n    .then(r => r.json())\n    .then(() => setPets([...pets, newData]))\n  }\n\n  return (\n    <div>\n      <Header/>\n      <NavBar />\n       <Switch >\n      <Route exact path=\"/\">\n      <HomePage \n        setName={setName}\n        setImage={setImage}\n        setAge={setAge}\n        setDescription={setDescription}\n        setTypes={setTypes}\n        addPet={addPet}\n        cardList={cardList}\n        setFilterValue={setFilterValue}\n        />\n      </Route>\n      <Route exact path=\"/meet pet\">\n        <MeetPet pets={pets} key={pets.id} />\n      </Route>\n      <Route path=\"/shop\">\n        <ShopContainer arr={arr} priceArr={priceArr} />\n      </Route>\n    </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}